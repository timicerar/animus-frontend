@import 'theme';
@import 'typography';

@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 0.001;
    }
    @media only screen and (#{$type}-width: #{$width}px) {
      @content;
    }
  }
}

@mixin text-breaking-with-three-dots {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin lineClamp($numOfLines) {
  display: -webkit-box;
  -webkit-line-clamp: $numOfLines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

@mixin interaction-transition(
  $properties: (
    color,
    background-color,
    border-color,
  )
) {
  transition: all $interaction-transition-duration $interaction-transition-timing-function;
  transition-property: $properties;
}

@mixin button {
  display: flex;
  align-items: center;
  justify-content: center;
  @include typography-button;
  width: fit-content;
  height: 56px;
  min-width: 248px;
  padding: 12px 16px;
  border-radius: 16px;
  cursor: pointer;
  @include interaction-transition;
  box-shadow: rgba(0, 0, 0, 0.25) 0 4px 4px;;
}

@mixin buttonColor($color, $background, $border-color) {
  color: $color;
  background: $background;

  @if $border-color != null {
    border: 2px solid $border-color;
  } @else {
    border: 0;
  }
}

@mixin buttonPrimaryDisabled {
  &:disabled {
    background: var(--color-disabled);
    border: 2px solid var(--color-disabled);
    cursor: not-allowed;
  }
}

@mixin buttonOutlinedDisabled {
  &:disabled {
    background: transparent;
    color: var(--color-disabled);
    border: 2px solid var(--color-disabled);
    cursor: not-allowed;
  }
}

@mixin buttonState($hover, $active) {
  &:not(:disabled) {
    @include hover {
      background: $hover;
      border: 2px solid $hover;
    }

    &:active {
      background: $active;
      border: 2px solid $active;
    }

    &:focus-visible {
      background: $active;
      border: 2px solid $active;
    }
  }
}

@mixin buttonStateOutlined($hover, $active) {
  &:not(:disabled) {
    @include hover {
      color: var(--color-white);
      background: $hover;
      border: 2px solid $hover;
    }

    &:active {
      color: var(--color-white);
      background: $active;
      border: 2px solid $active;
    }

    &:focus-visible {
      color: var(--color-white);
      background: $active;
      border: 2px solid $active;
    }
  }
}